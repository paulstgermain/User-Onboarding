[{"C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\index.js":"1","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\App.js":"2","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js":"3","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\Form.js":"4","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\validation\\formSchema.js":"5","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\User.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":1941,"mtime":1611801332296,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":3224,"mtime":1611802078034,"results":"11","hashOfConfig":"8"},{"size":459,"mtime":1611801902376,"results":"12","hashOfConfig":"8"},{"size":627,"mtime":1611801997986,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"jm11ww",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\index.js",[],["29","30"],"C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\App.js",["31"],"import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport axios from 'axios';\nimport schema from './validation/formSchema';\nimport User from './components/User';\n\nconst initialFormValues = {\n  userName: '',\n  email: '',\n  password: '',\n  tos: false,\n  role: '',\n}\n\nconst initialErrorValues = {\n  userName: '',\n  email: '',\n  password: '',\n  tos: '',\n  role: '',\n}\n\nconst initialDisabled = true;\n\nfunction App() {\n\n  //Slices of State\n\n  const [formValues, setFormValues] = useState(initialFormValues);\n\n  const [errorValues, setErrorValues] = useState(initialErrorValues);\n\n  const [users, setUsers] = useState([]);\n\n  const [disabled, setDisabled] = useState(initialDisabled);\n\n  //Handle Input Changes\n\n  const handleChange = (name, value) => {\n    setFormValues({...formValues, [name]: value})\n  }\n\n  //Handle Form Submission\n\n  const formSubmit = () => {\n    const newUser = {\n      userName: formValues.userName,\n      email: formValues.email,\n      password: formValues.password,\n      tos: formValues.tos,\n      role: formValues.role,\n    }\n\n    postData(newUser)\n  }\n\n  //Post New User Data to Database\n\n  const postData = (newUser) => {\n    axios.post('https://reqres.in/api/users', newUser)\n    .then(res => {\n      setUsers([...users, res.data]);\n      setFormValues(initialFormValues);\n    })\n    .catch(err => {\n      console.log(err);\n    })\n  }\n\n  //Validate Data\n\n  useEffect(() => {\n    schema.isValid(formValues).then(valid => {\n      setDisabled(!valid);\n    })\n\n  }, [formValues])\n\n  //Webpage Structure\n\n  return (\n    <div className=\"App\">\n      <Form\n      values={formValues} \n      errors={errorValues} \n      change={handleChange} \n      submit={formSubmit} \n      disabled={disabled}\n       />\n\n       {\n         users.map(user => {\n           return <User key={user.id} details={{user}} />\n         })\n       }\n    </div>\n    \n  );\n}\n\nexport default App;","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\reportWebVitals.js",[],"C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\Form.js",["32","33","34","35","36"],"import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport * as yup from 'yup';\r\nimport styled from 'styled-components';\r\n\r\nexport default function Form(props) {\r\n\r\n    const { values, errors, change, submit, disabled} = props;\r\n\r\n    const onSubmit = evt => {\r\n        evt.preventDefault()\r\n        submit()\r\n      }\r\n    \r\n      const onChange = evt => {\r\n        const { name, value, type, checked } = evt.target;\r\n        const valueToUse = type === 'checkbox' ? checked : value;\r\n        change(name, valueToUse)\r\n      }\r\n\r\n    return (\r\n        <UserForm onSubmit={onSubmit}>\r\n\r\n            <label>User Name: <br />\r\n                <input \r\n                type='text' \r\n                name='userName' \r\n                value={values.userName} \r\n                onChange={onChange}\r\n                placeholder='Enter name here...'\r\n                ></input>\r\n            </label>\r\n\r\n            <label>Email: <br />\r\n                <input \r\n                type='email' \r\n                name='email' \r\n                value={values.email} \r\n                onChange={onChange}\r\n                placeholder='Enter email here...'\r\n                ></input>\r\n            </label>\r\n\r\n            <label>Password: <br />\r\n                <input \r\n                type='password' \r\n                name='password' \r\n                value={values.password} \r\n                onChange={onChange}\r\n                placeholder='Enter password here...'\r\n                ></input>\r\n            </label>\r\n\r\n            <label>Role: <br />\r\n                <select\r\n                 onChange={onChange}\r\n                 value={values.role}\r\n                 name='role'\r\n                 >\r\n                    <option value=''>**Choose Your Role**</option>\r\n                    <option value='Front-End'>Front-End</option>\r\n                    <option value='Back-End'>Back-End</option>\r\n                    <option value='UX/UI'>UX/UI</option>\r\n                    <option value='Full-Stack'>Full Stack</option>\r\n                </select>\r\n            </label>\r\n\r\n            <label>I accept the terms of service: \r\n                <input \r\n                type='checkbox' \r\n                value={values.tos} \r\n                name='tos' \r\n                onChange={onChange}\r\n                ></input>\r\n            </label>\r\n\r\n            <button disabled={disabled}>Sign Me Up!</button>\r\n        </UserForm>\r\n    )\r\n}\r\n\r\nconst UserForm = styled.form`\r\n    height: 60vh;\r\n    width: 50vw;\r\n    margin: 2% auto 2% auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-evenly;\r\n    align-items: center;\r\n    border: 1px solid #000000;\r\n    border-radius: 15px;\r\n\r\n    button{\r\n        width: 35%;\r\n        background-color: rgb(80, 170, 80);\r\n        border: 2px solid rgb(80, 130, 80);\r\n        border-radius: 25px;\r\n        padding: 0.5%;\r\n        box-shadow: 2px 2px 2px rgba(33, 33, 33, 0.5);\r\n        transition: 0.3s;\r\n    }\r\n\r\n    button:disabled{\r\n        background-color: rgb(170, 80, 80);\r\n        border: 2px solid rgb(150, 33, 33);\r\n    }\r\n\r\n    button:enabled{\r\n        cursor: pointer;\r\n    }\r\n\r\n    button:hover{\r\n        box-shadow: none;\r\n    }\r\n`","C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\validation\\formSchema.js",[],"C:\\Users\\paulg\\desktop\\projects\\lambda\\unit2\\User-Onboarding\\user-onboarding\\src\\components\\User.js",[],{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":32,"column":23,"nodeType":"43","messageId":"44","endLine":32,"endColumn":37},{"ruleId":"41","severity":1,"message":"45","line":1,"column":17,"nodeType":"43","messageId":"44","endLine":1,"endColumn":25},{"ruleId":"41","severity":1,"message":"46","line":1,"column":27,"nodeType":"43","messageId":"44","endLine":1,"endColumn":36},{"ruleId":"41","severity":1,"message":"47","line":2,"column":8,"nodeType":"43","messageId":"44","endLine":2,"endColumn":13},{"ruleId":"41","severity":1,"message":"48","line":3,"column":13,"nodeType":"43","messageId":"44","endLine":3,"endColumn":16},{"ruleId":"41","severity":1,"message":"49","line":8,"column":21,"nodeType":"43","messageId":"44","endLine":8,"endColumn":27},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-unused-vars","'setErrorValues' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'useEffect' is defined but never used.","'axios' is defined but never used.","'yup' is defined but never used.","'errors' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]